What is the need of Numpy?
-------------------------
By using Python we can perform basic methematical opertions.

a=10
b=20
a+b
math.sqrt(4)
etc

As the part of Data Science,Machine Learning,Deep Learning it is the very common requirements to perform complex
mathematical operations like
1. Creation of Arrays/Matrices
2. Perform several operations on arrays/matrices
3. Perform integral calculus operations
4. Solving Differential equations
5. Statistics related operations etc

To perform these complex mathematical operations, Python does not contain any inbuilt library.

to Perform these complex operations we require a library which is nothing but NumPy.
Just because of these extra libraries like Numpy, Pandas, Matphotib, sklearn etc, Python is 
recommended language for Data Science, Machine Learning and Deep Learning etc

What is Numpy and History?
NumPy stands for Numerial Python Library.
It is the fundamental Python library to perform complex numerial operations.
NumPy is developed on top of Numeric Library in 2005.
Numeric Library developed by Jim Hugunin.
NumPy is developed by Travis Oliphant and multiple contributors.
NumPy is freeware and open source library.

In which language Numpy was written?
Numpy was written in Python and C languages.
AS most of Numpy written in C, performance wise Numpy is good(speed is more).
Because of high speed, numpy is best choice for ML algorithms than traditional
python's in  built data structure like List.

What are various features of Numpy?
1. Numpy is superfast because it is written in C language.
2. Numpy acts as backbone for Data Science libraries like pandas, scikit-learn etc
   Pandas iternally used nd array to store data, which is Numpy data structure.
   Scikit-learn internally used Numpy's nd array.
3. Numpy has vectorization feature which improves performance while iterating
   elements.
   
What is nd array in Numpy?
In Numpy, we can hold data by using array data structure.
The arrays which are created by using numpy are called nd arrays.
nd array ---> N-Dimensional array or Numpy Array
This nd array is most commonly used in Data Science Libraries like Pandas, Scikit learn etc


list: [10,20,30]
array: An indexed collection of homogeneous elements.

Numpy library contains several functions to create nd arrays and to perform several required operations.


What is the advantage of Numpy array over Python's in built list?
Performance is very high.

Application areas of Numpy?
1. To perform lineral algebra functions
2. To perform linear regression
3. To perform logistic networks
4. Deep Neural Networks
5. k-means clustering
6. Control systems
7 Operational Research 
 etc
 
Numpy is the fundamental and compulsory required library for Data Science, Machine Learning, Deep Learning etc.


Some Topics of Numpy:
---------------------
1. Creation of Numpy array
2. Array Operations
3. Array Attributes
4. Array Indexing and Slicing
5. Broadcasting
6. Iterating Over Array
7. Bindary Condition
8. Copy and View
9. Sort and Search
10. Statistics related functions
11. Linear Algebra fucntions
etc

Summary:
--------
1. NumPy stands for Numerical Python Library.
2. NumPy library defines several functions to solve complex mathematical problems in 
Data Science, Machine Learning, Deep Learning etc
3. Nump acts as Backbone for most of the libraries used in Data Science like
Pandas Sklearn etc
4. Numpy is developed on top of Numeric library in 2005.
Numeric library developed by Jim Hugunin.
Numpy is developed by Travis Oliphant and multiple contributors.
5. It is open source library and freeware.
6. The fundamental data structure in numpy is ndarray.
ndarray--->N-Dimensional Array or Numpy Array.
7. Numpy is written in C and Python Lanugages.
8. Numpy is superfast when compared with traditional  python code.

NumPy vs Traditional Python Code(Performance Test):
===================================================
The performace of Numpy is too good when compared with traditional Python Code

#Sample Code:

import numpy as np
from datetime import datetime
a = np.array([10,20,30])
b = np.array([1,2,3])
print(type(a))

#dot product: 10x1+20x2+30x3=140


#Traditional Python code to find dot product
def dot_product(a,b):
    result = 0
    for m,n in zip(a,b):
        result += m*n
    return result
    
before = datetime.now()
for i in range(1000000):
    dot_product(a,b)
after=datetime.now()
print("The time taken:",after-before)

# Numpy Library code to find dot product
before = datetime.now()
for i in range(1000000):
    np.dot(a,b)
after=datetime.now()
print("The time taken:",after-before)


output:
<class 'numpy.ndarray'>
The time taken: 0:00:04.935001
The time taken: 0:00:03.158807


What is an Array:
-----------------
An indexed collection of homogeneous data elements is nothing but array.
It is the most commonly used concept in programming languages like C/C++/Java etc

By default arrays concept is not available in Python, instead we can use List.
(But make sure list and array both are not same)

But in Python, we can create arrays in the following 2 ways:

1. By using array module
2. By using numpy module

1. By using array moduel:
-------------------------

import array
a = array.array('i',[10,20,30]) # i represents int type array
import math  # for understanding array.array like math.math
x = math.sqrt(4)
print(type(a))
print(a)
print("Element by element:")
for i in range(len(a)):
    print(a[i])
    
Output:
<class 'array.array'>
array('i', [10, 20, 30])
Element by element:
10
20
30

Note: Array module is not recommended to use because mcuh library support is not available.

2. By using numpy module:
-------------------------

import numpy
a = numpy.array([10,20,30])
print(type(a))
print(a)
print("Element one by one")
for x in a:
    print(x)
    
Output:
<class 'numpy.ndarray'>
[10 20 30]
Element one by one
10
20
30

Python List vs Numpy Arrays:
----------------------------
1. Similarities
2. Differences
3. Advantages of arrays

1. Similarities:
----------------
1. Both can be used to store data.
2. The order will be preserved. Hence we can access elements by using index.
3. Slicing is alos applicable for both.
4. Both are mutable, i.e., once we create list or array, we can change its elements.

2. Differences:
---------------
1. List is inbuilt data type but numpy array is not inbuilt. To use numpy arrays, we
have to install and import numpy library explicitly.
2. List can hold heterogeneous (different types) elements.
eg: l=[10,10.5,True,"Jameel"]
But array can hold only homogeneous elements.
eg: a = numpy.array([10,20,30])
3. On array we can perform vector operations(the operations which can be operated on every element of the 
array). But we cannot perform vector operation on list.
4. Arrays consume less memory when compared with list.


import numpy
import sys
a = numpy.array([10,20,30,40,50,60,70,10,20,30,40,50,60,])
l=[10,20,30,40,50,60,70,10,20,30,40,50,60,]
print("The size of numpy array:",sys.getsizeof(a))
print("The size of list", sys.getsizeof(l))

Output:
The size of numpy array: 216
The size of list 168

5. Array are super fast when compared with list 
6. Numpy array are more to use while performing mathematical operation


Creation of NumPy Arrays:
-------------------------
Numpy library contains several functions to create ndarray based on our requirement.
The following are few of such functions.

1. array()
2. arange()
3. zeros()
4. ones()
5. linspace()
6. eye()
7. random()
etc











